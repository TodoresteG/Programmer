@{
    Layout = "~/Views/Shared/_LayoutPlayerInfoViewComponent.cshtml";
}

@using Programmer.App.Models.Users
@model PlayerInfoViewModel

<section class="page-section row">
    <ul class="d-flex list-unstyled justify-content-md-around ml-auto bg-primary text-white py-3 col-md-12">
        <li class="nav-item mx-0 mx-lg-1">
            <span data-toggle="tooltip"><i class="fas fa-user"></i>@this.User.Identity.Name</span>
        </li>
        <li class="nav-item mx-0 mx-lg-1">
            <span><i class="fas fa-level-up-alt"></i>Level - @Model.Level</span>
        </li>
        <li class="nav-item mx-0 mx-lg-1">
            <span><i class="fas fa-at"></i>Xp - @Model.Xp/@Model.XpForNextLevel</span>
        </li>
        <li class="nav-item mx-0 mx-lg-1">
            <span><i class="far fa-money-bill-alt"></i>Money - @Model.Money$</span>
        </li>
        <li class="nav-item mx-0 mx-lg-1">
            <span><i class="fab fa-bitcoin"></i>Bitcoins - @Model.Bitcoins</span>
        </li>
        <li class="nav-item mx-0 mx-lg-1">
            <div><i class="fas fa-bolt"></i>Energy - <span id="energy">@Model.Energy</span><p id="energy-timer"><span class="minutes"></span><span class="seconds"></span></p></div>
        </li>
        <li class="nav-item mx-0 mx-lg-1">
            <div><i class="fas fa-clock"></i>Time Left - @Model.TimeRemaining - <p id="task-timer">Hours: <span class="hours"></span>Minutes:<span class="minutes"></span><span class="seconds">Seconds:</span></p></div>
        </li>
    </ul>
</section>

@section Scripts {
    <script asp-cut-key="myScriptKey">
        let currentEnergy = parseInt(document.getElementById('energy').textContent);
        let endTime = addMinutes(new Date(), 2).toString();

        if (document.cookie && document.cookie.match('energyClock')) {
            endTime = document.cookie.match(/(^|;)energyClock=([^;]+)/)[2];
        }
        else {
            document.cookie = 'energyClock=' + endTime + '; path=/; domain=.localhost';
        }

        initializeClock('energy-timer', endTime);

        function resetTimer() {
            let endTime = addMinutes(new Date(), 2).toString();
            initializeClock('energy-timer', endTime);
        }

        function addMinutes(date, minutes) {
            return new Date(date.getTime() + minutes * 60000);
        }

        function getTimeRemaining(endTime) {
            let time = Date.parse(endTime) - Date.parse(new Date());
            let seconds = Math.floor((time / 1000) % 60);
            let minutes = Math.floor((time / 1000 / 60) % 60);
            let hours = Math.floor(time / (1000 * 60 * 60) % 24);

            return {
                'total': time,
                'hours': hours,
                'minutes': minutes,
                'seconds': seconds,
            };
        }

        function initializeClock(id, endTime) {
            let clock = document.getElementById(id);
            let hoursSpan = document.querySelector('.hours');
            let minutesSpan = document.querySelector('.minutes');
            let secondsSpan = document.querySelector('.seconds');

            function updateClock() {
                let time = getTimeRemaining(endTime);

                hoursSpan.innerHtml = ('0' + time.hours).slice(-2);
                minutesSpan.textContent = ('0' + time.minutes).slice(-2) + 'm:';
                secondsSpan.textContent = ('0' + time.seconds).slice(-2) + 's';

                if (currentEnergy === 30) {
                    document.getElementById('energy-timer').innerHTML = '';
                    return;
                }

                if (time.total <= 0) {
                    clearInterval(timeInterval);

                    $.ajax({
                        method: 'GET',
                        url: '/api/users/UpdateUserEnergy'
                    })
                        .done(function success(data) {
                            $('#energy').text(data);
                            currentEnergy++;
                            resetTimer();
                        })
                        .fail(function fail(data, status) {
                            alert('I have failed you');
                            console.log(data);
                            console.log(status);
                        });
                }
            }

            updateClock();
            let timeInterval = setInterval(updateClock, 1000);
        }
    </script>
}
